// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<I18nContainer /> should render translated message should render with proper translation 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <I18nContainer
    locale="en"
    messages={
      Object {
        "id": "test",
      }
    }
    updateMessages={[Function]}
  >
    <FormattedMessage
      id="id"
      values={Object {}}
    />
  </I18nContainer>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "en",
    "nodeType": "class",
    "props": Object {
      "children": <FormattedMessage
        id="id"
        values={Object {}}
      />,
      "locale": "en",
      "messages": Object {
        "id": "test",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "id": "id",
        "values": Object {},
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "en",
      "nodeType": "class",
      "props": Object {
        "children": <FormattedMessage
          id="id"
          values={Object {}}
        />,
        "locale": "en",
        "messages": Object {
          "id": "test",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "id": "id",
          "values": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
