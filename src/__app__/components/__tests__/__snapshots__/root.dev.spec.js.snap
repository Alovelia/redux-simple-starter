// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Root /> when initializing, the expected output is rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Root
    history={Object {}}
    rootRoute={Array []}
    store={
      Object {
        "dispatch": [Function],
        "getAction": [Function],
        "getActions": [Function],
        "getState": [Function],
        "isActionDispatched": [Function],
        "isActionTypeDispatched": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Provider
        store={
          Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          }
        }
      >
        <Connect(I18nContainer)>
          <ConnectedRouter
            history={Object {}}
          >
            <Layout
              title="_"
            >
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/features"
                />
                <Route
                  component={[Function]}
                  path=""
                />
              </Switch>
            </Layout>
          </ConnectedRouter>
        </Connect(I18nContainer)>
      </Provider>,
      "warnings": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Connect(I18nContainer)>
          <ConnectedRouter
            history={Object {}}
          >
            <Layout
              title="_"
            >
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/features"
                />
                <Route
                  component={[Function]}
                  path=""
                />
              </Switch>
            </Layout>
          </ConnectedRouter>
        </Connect(I18nContainer)>,
        "store": Object {
          "dispatch": [Function],
          "getAction": [Function],
          "getActions": [Function],
          "getState": [Function],
          "isActionDispatched": [Function],
          "isActionTypeDispatched": [Function],
          "subscribe": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ConnectedRouter
            history={Object {}}
          >
            <Layout
              title="_"
            >
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/features"
                />
                <Route
                  component={[Function]}
                  path=""
                />
              </Switch>
            </Layout>
          </ConnectedRouter>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Layout
              title="_"
            >
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/features"
                />
                <Route
                  component={[Function]}
                  path=""
                />
              </Switch>
            </Layout>,
            "history": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/features"
                />
                <Route
                  component={[Function]}
                  path=""
                />
              </Switch>,
              "title": "_",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/features"
                  />,
                  <Route
                    component={[Function]}
                    path=""
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/features",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Provider
          store={
            Object {
              "dispatch": [Function],
              "getAction": [Function],
              "getActions": [Function],
              "getState": [Function],
              "isActionDispatched": [Function],
              "isActionTypeDispatched": [Function],
              "subscribe": [Function],
            }
          }
        >
          <Connect(I18nContainer)>
            <ConnectedRouter
              history={Object {}}
            >
              <Layout
                title="_"
              >
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/features"
                  />
                  <Route
                    component={[Function]}
                    path=""
                  />
                </Switch>
              </Layout>
            </ConnectedRouter>
          </Connect(I18nContainer)>
        </Provider>,
        "warnings": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(I18nContainer)>
            <ConnectedRouter
              history={Object {}}
            >
              <Layout
                title="_"
              >
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/features"
                  />
                  <Route
                    component={[Function]}
                    path=""
                  />
                </Switch>
              </Layout>
            </ConnectedRouter>
          </Connect(I18nContainer)>,
          "store": Object {
            "dispatch": [Function],
            "getAction": [Function],
            "getActions": [Function],
            "getState": [Function],
            "isActionDispatched": [Function],
            "isActionTypeDispatched": [Function],
            "subscribe": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ConnectedRouter
              history={Object {}}
            >
              <Layout
                title="_"
              >
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/features"
                  />
                  <Route
                    component={[Function]}
                    path=""
                  />
                </Switch>
              </Layout>
            </ConnectedRouter>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Layout
                title="_"
              >
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/features"
                  />
                  <Route
                    component={[Function]}
                    path=""
                  />
                </Switch>
              </Layout>,
              "history": Object {},
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    path="/features"
                  />
                  <Route
                    component={[Function]}
                    path=""
                  />
                </Switch>,
                "title": "_",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      path="/features"
                    />,
                    <Route
                      component={[Function]}
                      path=""
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "/features",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "path": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
